
[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m
[0m[1mdata.template_file.kube-worker-user-data: Refreshing state...[0m
[0m[1mdata.template_file.kube-infra-user-data: Refreshing state...[0m
[0m[1mdata.template_file.kube-master-user-data: Refreshing state...[0m
[0m[1mdata.template_file.gatekeeper-user-data: Refreshing state...[0m
[0m[1mdata.aws_availability_zones.available: Refreshing state...[0m
[0m[1mdata.aws_caller_identity.current: Refreshing state...[0m

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[32m  [32m+[0m [32maws_autoscaling_group.kube-infra
[0m      id:                                        <computed>
      arn:                                       <computed>
      availability_zones.#:                      <computed>
      default_cooldown:                          <computed>
      desired_capacity:                          "2"
      force_delete:                              "false"
      health_check_grace_period:                 "300"
      health_check_type:                         <computed>
      launch_configuration:                      "${aws_launch_configuration.kube-infra.id}"
      load_balancers.#:                          <computed>
      max_size:                                  "2"
      metrics_granularity:                       "1Minute"
      min_size:                                  "2"
      name:                                      "kube-infra-e2e-hm-a"
      protect_from_scale_in:                     "false"
      tag.#:                                     "3"
      tag.1045315720.key:                        "realm"
      tag.1045315720.propagate_at_launch:        "true"
      tag.1045315720.value:                      "e2e-hm-a"
      tag.2419172159.key:                        "Name"
      tag.2419172159.propagate_at_launch:        "true"
      tag.2419172159.value:                      "kube-infra"
      tag.4156167271.key:                        "KubernetesCluster"
      tag.4156167271.propagate_at_launch:        "true"
      tag.4156167271.value:                      "e2e-hm-a"
      target_group_arns.#:                       <computed>
      vpc_zone_identifier.#:                     <computed>
      wait_for_capacity_timeout:                 "10m"
[0m
[0m[32m  [32m+[0m [32maws_autoscaling_group.kube-worker
[0m      id:                                        <computed>
      arn:                                       <computed>
      availability_zones.#:                      <computed>
      default_cooldown:                          <computed>
      desired_capacity:                          "1"
      force_delete:                              "false"
      health_check_grace_period:                 "300"
      health_check_type:                         <computed>
      launch_configuration:                      "${aws_launch_configuration.kube-worker.id}"
      load_balancers.#:                          <computed>
      max_size:                                  "10"
      metrics_granularity:                       "1Minute"
      min_size:                                  "1"
      name:                                      "kube-worker-e2e-hm-a"
      protect_from_scale_in:                     "false"
      tag.#:                                     "3"
      tag.1045315720.key:                        "realm"
      tag.1045315720.propagate_at_launch:        "true"
      tag.1045315720.value:                      "e2e-hm-a"
      tag.1743650307.key:                        "Name"
      tag.1743650307.propagate_at_launch:        "true"
      tag.1743650307.value:                      "kube-worker"
      tag.4156167271.key:                        "KubernetesCluster"
      tag.4156167271.propagate_at_launch:        "true"
      tag.4156167271.value:                      "e2e-hm-a"
      target_group_arns.#:                       <computed>
      vpc_zone_identifier.#:                     <computed>
      wait_for_capacity_timeout:                 "10m"
[0m
[0m[32m  [32m+[0m [32maws_efs_mount_target.efs
[0m      id:                                        <computed>
      dns_name:                                  <computed>
      file_system_id:                            "fs-1fbb4a46"
      ip_address:                                <computed>
      network_interface_id:                      <computed>
      security_groups.#:                         <computed>
      subnet_id:                                 "${aws_subnet.private-0.id}"
[0m
[0m[32m  [32m+[0m [32maws_eip.eip_0
[0m      id:                                        <computed>
      allocation_id:                             <computed>
      association_id:                            <computed>
      domain:                                    <computed>
      instance:                                  <computed>
      network_interface:                         <computed>
      private_ip:                                <computed>
      public_ip:                                 <computed>
      vpc:                                       "true"
[0m
[0m[32m  [32m+[0m [32maws_elb.loadbalancer
[0m      id:                                        <computed>
      arn:                                       <computed>
      availability_zones.#:                      <computed>
      connection_draining:                       "false"
      connection_draining_timeout:               "300"
      cross_zone_load_balancing:                 "true"
      dns_name:                                  <computed>
      health_check.#:                            "1"
      health_check.0.healthy_threshold:          "2"
      health_check.0.interval:                   "30"
      health_check.0.target:                     "TCP:1936"
      health_check.0.timeout:                    "15"
      health_check.0.unhealthy_threshold:        "2"
      idle_timeout:                              "60"
      instances.#:                               <computed>
      internal:                                  "false"
      listener.#:                                "1"
      listener.610193557.instance_port:          "443"
      listener.610193557.instance_protocol:      "tcp"
      listener.610193557.lb_port:                "443"
      listener.610193557.lb_protocol:            "tcp"
      listener.610193557.ssl_certificate_id:     ""
      name:                                      "loadbalancer-e2e-hm-a"
      security_groups.#:                         <computed>
      source_security_group:                     <computed>
      source_security_group_id:                  <computed>
      subnets.#:                                 <computed>
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "loadbalancer"
      tags.realm:                                "e2e-hm-a"
      zone_id:                                   <computed>
[0m
[0m[32m  [32m+[0m [32maws_iam_instance_profile.kube-node
[0m      id:                                        <computed>
      arn:                                       <computed>
      create_date:                               <computed>
      name:                                      "kube-node-e2e-hm-a"
      path:                                      "/"
      role:                                      "kube-node-e2e-hm-a"
      roles.#:                                   <computed>
      unique_id:                                 <computed>
[0m
[0m[32m  [32m+[0m [32maws_iam_role.kube-node
[0m      id:                                        <computed>
      arn:                                       <computed>
      assume_role_policy:                        "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"
      create_date:                               <computed>
      force_detach_policies:                     "false"
      name:                                      "kube-node-e2e-hm-a"
      path:                                      "/"
      unique_id:                                 <computed>
[0m
[0m[32m  [32m+[0m [32maws_iam_role_policy.kube-node
[0m      id:                                        <computed>
      name:                                      "kube-node-e2e-hm-a"
      policy:                                    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Resource\": [\"*\"]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeLoadBalancers\"\n      ],\n      \"Resource\": [\"*\"]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:AttachVolume\",\n        \"ec2:DetachVolume\"\n      ],\n      \"Resource\": [\"arn:aws:ec2:eu-central-1:163926615354:instance/*\"]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:AttachVolume\",\n        \"ec2:DetachVolume\"\n      ],\n      \"Resource\": [\"arn:aws:ec2:eu-central-1:163926615354:volume/*\"]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticfilesystem:DescribeFileSystems\"\n      ],\n      \"Resource\": [\"*\"]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:DescribeAutoScalingGroups\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:SetDesiredCapacity\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n      ],\n      \"Resource\": [\"*\"]\n    }\n  ]\n}\n"
      role:                                      "${aws_iam_role.kube-node.id}"
[0m
[0m[32m  [32m+[0m [32maws_instance.gatekeeper
[0m      id:                                        <computed>
      ami:                                       "ami-72603299"
      associate_public_ip_address:               "true"
      availability_zone:                         <computed>
      ebs_block_device.#:                        <computed>
      ephemeral_block_device.#:                  <computed>
      instance_state:                            <computed>
      instance_type:                             "t2.nano"
      ipv6_address_count:                        <computed>
      ipv6_addresses.#:                          <computed>
      key_name:                                  "terra-kubika"
      network_interface.#:                       <computed>
      network_interface_id:                      <computed>
      placement_group:                           <computed>
      primary_network_interface_id:              <computed>
      private_dns:                               <computed>
      private_ip:                                "10.0.200.200"
      public_dns:                                <computed>
      public_ip:                                 <computed>
      root_block_device.#:                       "1"
      root_block_device.0.delete_on_termination: "true"
      root_block_device.0.volume_size:           "10"
      root_block_device.0.volume_type:           <computed>
      security_groups.#:                         <computed>
      source_dest_check:                         "true"
      subnet_id:                                 "${aws_subnet.public-0.id}"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "gatekeeper"
      tags.realm:                                "e2e-hm-a"
      tenancy:                                   <computed>
      user_data:                                 "4a14569e2b996abf14022ca26d71492679483d71"
      volume_tags.%:                             <computed>
      vpc_security_group_ids.#:                  <computed>
[0m
[0m[32m  [32m+[0m [32maws_instance.kube-master
[0m      id:                                        <computed>
      ami:                                       "ami-da663431"
      associate_public_ip_address:               <computed>
      availability_zone:                         <computed>
      ebs_block_device.#:                        <computed>
      ephemeral_block_device.#:                  <computed>
      iam_instance_profile:                      "kube-node-e2e-hm-a"
      instance_state:                            <computed>
      instance_type:                             "t2.small"
      ipv6_address_count:                        <computed>
      ipv6_addresses.#:                          <computed>
      key_name:                                  "terra-kubika"
      network_interface.#:                       <computed>
      network_interface_id:                      <computed>
      placement_group:                           <computed>
      primary_network_interface_id:              <computed>
      private_dns:                               <computed>
      private_ip:                                "10.0.10.10"
      public_dns:                                <computed>
      public_ip:                                 <computed>
      root_block_device.#:                       "1"
      root_block_device.0.delete_on_termination: "true"
      root_block_device.0.volume_size:           "16"
      root_block_device.0.volume_type:           <computed>
      security_groups.#:                         <computed>
      source_dest_check:                         "true"
      subnet_id:                                 "${aws_subnet.private-0.id}"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "kube-master"
      tags.realm:                                "e2e-hm-a"
      tenancy:                                   <computed>
      user_data:                                 "4c1411af077deacb351cce90998047d27c161d51"
      volume_tags.%:                             <computed>
      vpc_security_group_ids.#:                  <computed>
[0m
[0m[32m  [32m+[0m [32maws_internet_gateway.igw
[0m      id:                                        <computed>
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "igw"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_launch_configuration.kube-infra
[0m      id:                                        <computed>
      associate_public_ip_address:               "false"
      ebs_block_device.#:                        <computed>
      ebs_optimized:                             <computed>
      enable_monitoring:                         "true"
      iam_instance_profile:                      "kube-node-e2e-hm-a"
      image_id:                                  "ami-da453431"
      instance_type:                             "t2.large"
      key_name:                                  "terra-kubika"
      name:                                      <computed>
      name_prefix:                               "kube-infra"
      root_block_device.#:                       "1"
      root_block_device.0.delete_on_termination: "true"
      root_block_device.0.iops:                  <computed>
      root_block_device.0.volume_size:           "16"
      root_block_device.0.volume_type:           <computed>
      security_groups.#:                         <computed>
      user_data:                                 "bfa293b6c47e88145aa9aaef43e8d7230c02bde4"
[0m
[0m[32m  [32m+[0m [32maws_launch_configuration.kube-worker
[0m      id:                                        <computed>
      associate_public_ip_address:               "false"
      ebs_block_device.#:                        <computed>
      ebs_optimized:                             <computed>
      enable_monitoring:                         "true"
      iam_instance_profile:                      "kube-node-e2e-hm-a"
      image_id:                                  "ami-da123431"
      instance_type:                             "t2.large"
      key_name:                                  "terra-kubika"
      name:                                      <computed>
      name_prefix:                               "kube-worker"
      root_block_device.#:                       "1"
      root_block_device.0.delete_on_termination: "true"
      root_block_device.0.iops:                  <computed>
      root_block_device.0.volume_size:           "16"
      root_block_device.0.volume_type:           <computed>
      security_groups.#:                         <computed>
      user_data:                                 "b2b37365f9065738f6615a882539b7fe61fb2d26"
[0m
[0m[32m  [32m+[0m [32maws_nat_gateway.nat_0
[0m      id:                                        <computed>
      allocation_id:                             "${aws_eip.eip_0.id}"
      network_interface_id:                      <computed>
      private_ip:                                <computed>
      public_ip:                                 <computed>
      subnet_id:                                 "${aws_subnet.public-0.id}"
[0m
[0m[32m  [32m+[0m [32maws_route.database
[0m      id:                                        <computed>
      destination_cidr_block:                    "172.16.0.0/16"
      destination_prefix_list_id:                <computed>
      egress_only_gateway_id:                    <computed>
      gateway_id:                                <computed>
      instance_id:                               <computed>
      instance_owner_id:                         <computed>
      nat_gateway_id:                            <computed>
      network_interface_id:                      <computed>
      origin:                                    <computed>
      route_table_id:                            "${aws_route_table.nat_0.id}"
      state:                                     <computed>
      vpc_peering_connection_id:                 "${aws_vpc_peering_connection.database.id}"
[0m
[0m[32m  [32m+[0m [32maws_route.database-inverse
[0m      id:                                        <computed>
      destination_cidr_block:                    "10.0.10.0/24"
      destination_prefix_list_id:                <computed>
      egress_only_gateway_id:                    <computed>
      gateway_id:                                <computed>
      instance_id:                               <computed>
      instance_owner_id:                         <computed>
      nat_gateway_id:                            <computed>
      network_interface_id:                      <computed>
      origin:                                    <computed>
      route_table_id:                            "rtb-9333cdf8"
      state:                                     <computed>
      vpc_peering_connection_id:                 "${aws_vpc_peering_connection.database.id}"
[0m
[0m[32m  [32m+[0m [32maws_route.internet
[0m      id:                                        <computed>
      destination_cidr_block:                    "0.0.0.0/0"
      destination_prefix_list_id:                <computed>
      egress_only_gateway_id:                    <computed>
      gateway_id:                                "${aws_internet_gateway.igw.id}"
      instance_id:                               <computed>
      instance_owner_id:                         <computed>
      nat_gateway_id:                            <computed>
      network_interface_id:                      <computed>
      origin:                                    <computed>
      route_table_id:                            "${aws_route_table.internet.id}"
      state:                                     <computed>
[0m
[0m[32m  [32m+[0m [32maws_route.nat_0
[0m      id:                                        <computed>
      destination_cidr_block:                    "0.0.0.0/0"
      destination_prefix_list_id:                <computed>
      egress_only_gateway_id:                    <computed>
      gateway_id:                                <computed>
      instance_id:                               <computed>
      instance_owner_id:                         <computed>
      nat_gateway_id:                            "${aws_nat_gateway.nat_0.id}"
      network_interface_id:                      <computed>
      origin:                                    <computed>
      route_table_id:                            "${aws_route_table.nat_0.id}"
      state:                                     <computed>
[0m
[0m[32m  [32m+[0m [32maws_route53_health_check.kubeapi-health
[0m      id:                                        <computed>
      enable_sni:                                <computed>
      failure_threshold:                         "2"
      fqdn:                                      "kubeapi-e2e-hm-a.kubika.acme.org"
      measure_latency:                           "false"
      port:                                      "443"
      regions.#:                                 "3"
      regions.2003110180:                        "us-east-1"
      regions.2790541186:                        "eu-west-1"
      regions.934703181:                         "ap-northeast-1"
      request_interval:                          "30"
      resource_path:                             "/healthz"
      tags.%:                                    "2"
      tags.Name:                                 "kubeapi e2e-hm-a"
      tags.realm:                                "e2e-hm-a"
      type:                                      "HTTPS"
[0m
[0m[32m  [32m+[0m [32maws_route53_health_check.realm-health
[0m      id:                                        <computed>
      enable_sni:                                <computed>
      failure_threshold:                         "2"
      fqdn:                                      "e2e-hm-a.kubika.acme.org"
      measure_latency:                           "false"
      port:                                      "443"
      regions.#:                                 "3"
      regions.2003110180:                        "us-east-1"
      regions.2790541186:                        "eu-west-1"
      regions.934703181:                         "ap-northeast-1"
      request_interval:                          "30"
      resource_path:                             "/health"
      tags.%:                                    "2"
      tags.Name:                                 "realm e2e-hm-a"
      tags.realm:                                "e2e-hm-a"
      type:                                      "HTTPS"
[0m
[0m[32m  [32m+[0m [32maws_route53_record.alliance-kubika-e2e-hm-a
[0m      id:                                        <computed>
      fqdn:                                      <computed>
      health_check_id:                           "${aws_route53_health_check.realm-health.id}"
      name:                                      "kubika"
      records.#:                                 "1"
      records.2818504672:                        "e2e-hm-a.kubika.acme.org"
      set_identifier:                            "e2e-hm-a"
      ttl:                                       "60"
      type:                                      "CNAME"
      weighted_routing_policy.#:                 "1"
      weighted_routing_policy.0.weight:          "50"
      zone_id:                                   "Z2B6ZWCCCHJC9N"
[0m
[0m[32m  [32m+[0m [32maws_route53_record.service-route[0]
[0m      id:                                        <computed>
      alias.#:                                   "1"
      alias.~2338883340.evaluate_target_health:  "false"
      alias.~2338883340.name:                    "${aws_elb.loadbalancer.dns_name}"
      alias.~2338883340.zone_id:                 "${aws_elb.loadbalancer.zone_id}"
      fqdn:                                      <computed>
      name:                                      "e2e-hm-a.kubika.acme.org"
      type:                                      "A"
      zone_id:                                   "Z2B6ZWCALHJC9N"
[0m
[0m[32m  [32m+[0m [32maws_route53_record.service-route[1]
[0m      id:                                        <computed>
      alias.#:                                   "1"
      alias.~2338883340.evaluate_target_health:  "false"
      alias.~2338883340.name:                    "${aws_elb.loadbalancer.dns_name}"
      alias.~2338883340.zone_id:                 "${aws_elb.loadbalancer.zone_id}"
      fqdn:                                      <computed>
      name:                                      "kubeapi-e2e-hm-a.kubika.acme.org"
      type:                                      "A"
      zone_id:                                   "Z2B6ZWCDDHJC9N"
[0m
[0m[32m  [32m+[0m [32maws_route_table.internet
[0m      id:                                        <computed>
      propagating_vgws.#:                        <computed>
      route.#:                                   <computed>
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "internet"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_route_table.nat_0
[0m      id:                                        <computed>
      propagating_vgws.#:                        <computed>
      route.#:                                   <computed>
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "nat_0"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_route_table_association.internet_0
[0m      id:                                        <computed>
      route_table_id:                            "${aws_route_table.internet.id}"
      subnet_id:                                 "${aws_subnet.public-0.id}"
[0m
[0m[32m  [32m+[0m [32maws_route_table_association.nat_0
[0m      id:                                        <computed>
      route_table_id:                            "${aws_route_table.nat_0.id}"
      subnet_id:                                 "${aws_subnet.private-0.id}"
[0m
[0m[32m  [32m+[0m [32maws_security_group.gatekeeper
[0m      id:                                        <computed>
      description:                               "SG for gatekeeper"
      egress.#:                                  "3"
      egress.1676342808.cidr_blocks.#:           "2"
      egress.1676342808.cidr_blocks.0:           "10.0.10.0/24"
      egress.1676342808.cidr_blocks.1:           "10.0.200.0/24"
      egress.1676342808.description:             ""
      egress.1676342808.from_port:               "22"
      egress.1676342808.ipv6_cidr_blocks.#:      "0"
      egress.1676342808.prefix_list_ids.#:       "0"
      egress.1676342808.protocol:                "tcp"
      egress.1676342808.security_groups.#:       "0"
      egress.1676342808.self:                    "false"
      egress.1676342808.to_port:                 "22"
      egress.2214680975.cidr_blocks.#:           "1"
      egress.2214680975.cidr_blocks.0:           "0.0.0.0/0"
      egress.2214680975.description:             ""
      egress.2214680975.from_port:               "80"
      egress.2214680975.ipv6_cidr_blocks.#:      "0"
      egress.2214680975.prefix_list_ids.#:       "0"
      egress.2214680975.protocol:                "tcp"
      egress.2214680975.security_groups.#:       "0"
      egress.2214680975.self:                    "false"
      egress.2214680975.to_port:                 "80"
      egress.2617001939.cidr_blocks.#:           "1"
      egress.2617001939.cidr_blocks.0:           "0.0.0.0/0"
      egress.2617001939.description:             ""
      egress.2617001939.from_port:               "443"
      egress.2617001939.ipv6_cidr_blocks.#:      "0"
      egress.2617001939.prefix_list_ids.#:       "0"
      egress.2617001939.protocol:                "tcp"
      egress.2617001939.security_groups.#:       "0"
      egress.2617001939.self:                    "false"
      egress.2617001939.to_port:                 "443"
      ingress.#:                                 "1"
      ingress.2541437006.cidr_blocks.#:          "1"
      ingress.2541437006.cidr_blocks.0:          "0.0.0.0/0"
      ingress.2541437006.description:            ""
      ingress.2541437006.from_port:              "22"
      ingress.2541437006.ipv6_cidr_blocks.#:     "0"
      ingress.2541437006.protocol:               "tcp"
      ingress.2541437006.security_groups.#:      "0"
      ingress.2541437006.self:                   "false"
      ingress.2541437006.to_port:                "22"
      name:                                      "gatekeeper"
      owner_id:                                  <computed>
      revoke_rules_on_delete:                    "false"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "gatekeeper"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_security_group.kube-node
[0m      id:                                        <computed>
      description:                               "SG for k8s"
      egress.#:                                  "4"
      egress.1143022598.cidr_blocks.#:           "1"
      egress.1143022598.cidr_blocks.0:           "10.0.10.0/24"
      egress.1143022598.description:             ""
      egress.1143022598.from_port:               "0"
      egress.1143022598.ipv6_cidr_blocks.#:      "0"
      egress.1143022598.prefix_list_ids.#:       "0"
      egress.1143022598.protocol:                "-1"
      egress.1143022598.security_groups.#:       "0"
      egress.1143022598.self:                    "false"
      egress.1143022598.to_port:                 "0"
      egress.2214680975.cidr_blocks.#:           "1"
      egress.2214680975.cidr_blocks.0:           "0.0.0.0/0"
      egress.2214680975.description:             ""
      egress.2214680975.from_port:               "80"
      egress.2214680975.ipv6_cidr_blocks.#:      "0"
      egress.2214680975.prefix_list_ids.#:       "0"
      egress.2214680975.protocol:                "tcp"
      egress.2214680975.security_groups.#:       "0"
      egress.2214680975.self:                    "false"
      egress.2214680975.to_port:                 "80"
      egress.2617001939.cidr_blocks.#:           "1"
      egress.2617001939.cidr_blocks.0:           "0.0.0.0/0"
      egress.2617001939.description:             ""
      egress.2617001939.from_port:               "443"
      egress.2617001939.ipv6_cidr_blocks.#:      "0"
      egress.2617001939.prefix_list_ids.#:       "0"
      egress.2617001939.protocol:                "tcp"
      egress.2617001939.security_groups.#:       "0"
      egress.2617001939.self:                    "false"
      egress.2617001939.to_port:                 "443"
      egress.3856993239.cidr_blocks.#:           "1"
      egress.3856993239.cidr_blocks.0:           "172.16.0.0/16"
      egress.3856993239.description:             ""
      egress.3856993239.from_port:               "5432"
      egress.3856993239.ipv6_cidr_blocks.#:      "0"
      egress.3856993239.prefix_list_ids.#:       "0"
      egress.3856993239.protocol:                "tcp"
      egress.3856993239.security_groups.#:       "0"
      egress.3856993239.self:                    "false"
      egress.3856993239.to_port:                 "5432"
      ingress.#:                                 "4"
      ingress.1143022598.cidr_blocks.#:          "1"
      ingress.1143022598.cidr_blocks.0:          "10.0.10.0/24"
      ingress.1143022598.description:            ""
      ingress.1143022598.from_port:              "0"
      ingress.1143022598.ipv6_cidr_blocks.#:     "0"
      ingress.1143022598.protocol:               "-1"
      ingress.1143022598.security_groups.#:      "0"
      ingress.1143022598.self:                   "false"
      ingress.1143022598.to_port:                "0"
      ingress.1696839629.cidr_blocks.#:          "1"
      ingress.1696839629.cidr_blocks.0:          "10.0.200.200/32"
      ingress.1696839629.description:            ""
      ingress.1696839629.from_port:              "22"
      ingress.1696839629.ipv6_cidr_blocks.#:     "0"
      ingress.1696839629.protocol:               "tcp"
      ingress.1696839629.security_groups.#:      "0"
      ingress.1696839629.self:                   "false"
      ingress.1696839629.to_port:                "22"
      ingress.3765474912.cidr_blocks.#:          "1"
      ingress.3765474912.cidr_blocks.0:          "10.0.200.0/24"
      ingress.3765474912.description:            ""
      ingress.3765474912.from_port:              "1936"
      ingress.3765474912.ipv6_cidr_blocks.#:     "0"
      ingress.3765474912.protocol:               "tcp"
      ingress.3765474912.security_groups.#:      "0"
      ingress.3765474912.self:                   "false"
      ingress.3765474912.to_port:                "1936"
      ingress.385995189.cidr_blocks.#:           "1"
      ingress.385995189.cidr_blocks.0:           "10.0.200.0/24"
      ingress.385995189.description:             ""
      ingress.385995189.from_port:               "443"
      ingress.385995189.ipv6_cidr_blocks.#:      "0"
      ingress.385995189.protocol:                "tcp"
      ingress.385995189.security_groups.#:       "0"
      ingress.385995189.self:                    "false"
      ingress.385995189.to_port:                 "443"
      name:                                      "kube-node"
      owner_id:                                  <computed>
      revoke_rules_on_delete:                    "false"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "kube-node"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_security_group.loadbalancer
[0m      id:                                        <computed>
      description:                               "SG for loadbalancer"
      egress.#:                                  "2"
      egress.3961731910.cidr_blocks.#:           "1"
      egress.3961731910.cidr_blocks.0:           "10.0.10.0/24"
      egress.3961731910.description:             ""
      egress.3961731910.from_port:               "1936"
      egress.3961731910.ipv6_cidr_blocks.#:      "0"
      egress.3961731910.prefix_list_ids.#:       "0"
      egress.3961731910.protocol:                "tcp"
      egress.3961731910.security_groups.#:       "0"
      egress.3961731910.self:                    "false"
      egress.3961731910.to_port:                 "1936"
      egress.4281578450.cidr_blocks.#:           "1"
      egress.4281578450.cidr_blocks.0:           "10.0.10.0/24"
      egress.4281578450.description:             ""
      egress.4281578450.from_port:               "443"
      egress.4281578450.ipv6_cidr_blocks.#:      "0"
      egress.4281578450.prefix_list_ids.#:       "0"
      egress.4281578450.protocol:                "tcp"
      egress.4281578450.security_groups.#:       "0"
      egress.4281578450.self:                    "false"
      egress.4281578450.to_port:                 "443"
      ingress.#:                                 "1"
      ingress.2617001939.cidr_blocks.#:          "1"
      ingress.2617001939.cidr_blocks.0:          "0.0.0.0/0"
      ingress.2617001939.description:            ""
      ingress.2617001939.from_port:              "443"
      ingress.2617001939.ipv6_cidr_blocks.#:     "0"
      ingress.2617001939.protocol:               "tcp"
      ingress.2617001939.security_groups.#:      "0"
      ingress.2617001939.self:                   "false"
      ingress.2617001939.to_port:                "443"
      name:                                      "loadbalancer"
      owner_id:                                  <computed>
      revoke_rules_on_delete:                    "false"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "loadbalancer"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_security_group.nfs
[0m      id:                                        <computed>
      description:                               "SG for NFS shares"
      egress.#:                                  <computed>
      ingress.#:                                 "1"
      ingress.2488354934.cidr_blocks.#:          "1"
      ingress.2488354934.cidr_blocks.0:          "10.0.10.0/24"
      ingress.2488354934.description:            ""
      ingress.2488354934.from_port:              "2049"
      ingress.2488354934.ipv6_cidr_blocks.#:     "0"
      ingress.2488354934.protocol:               "tcp"
      ingress.2488354934.security_groups.#:      "0"
      ingress.2488354934.self:                   "false"
      ingress.2488354934.to_port:                "2049"
      name:                                      "nfs"
      owner_id:                                  <computed>
      revoke_rules_on_delete:                    "false"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "nfs"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_subnet.private-0
[0m      id:                                        <computed>
      assign_ipv6_address_on_creation:           "false"
      availability_zone:                         "eu-central-1a"
      cidr_block:                                "10.0.10.0/24"
      ipv6_cidr_block:                           <computed>
      ipv6_cidr_block_association_id:            <computed>
      map_public_ip_on_launch:                   "false"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "private-0"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_subnet.public-0
[0m      id:                                        <computed>
      assign_ipv6_address_on_creation:           "false"
      availability_zone:                         "eu-central-1a"
      cidr_block:                                "10.0.200.0/24"
      ipv6_cidr_block:                           <computed>
      ipv6_cidr_block_association_id:            <computed>
      map_public_ip_on_launch:                   "false"
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "public-0"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m[32m  [32m+[0m [32maws_vpc.datacenter
[0m      id:                                        <computed>
      assign_generated_ipv6_cidr_block:          "false"
      cidr_block:                                "10.0.0.0/16"
      default_network_acl_id:                    <computed>
      default_route_table_id:                    <computed>
      default_security_group_id:                 <computed>
      dhcp_options_id:                           <computed>
      enable_classiclink:                        <computed>
      enable_classiclink_dns_support:            <computed>
      enable_dns_hostnames:                      "true"
      enable_dns_support:                        "true"
      instance_tenancy:                          <computed>
      ipv6_association_id:                       <computed>
      ipv6_cidr_block:                           <computed>
      main_route_table_id:                       <computed>
      tags.%:                                    "3"
      tags.KubernetesCluster:                    "e2e-hm-a"
      tags.Name:                                 "datacenter"
      tags.realm:                                "e2e-hm-a"
[0m
[0m[32m  [32m+[0m [32maws_vpc_peering_connection.database
[0m      id:                                        <computed>
      accept_status:                             <computed>
      accepter.#:                                <computed>
      auto_accept:                               "true"
      peer_owner_id:                             <computed>
      peer_vpc_id:                               "vpc-9142c9fa"
      requester.#:                               <computed>
      tags.%:                                    "2"
      tags.Name:                                 "database access peering for e2e-hm-a"
      tags.realm:                                "e2e-hm-a"
      vpc_id:                                    "${aws_vpc.datacenter.id}"
[0m
[0m
[0m[1mPlan:[0m 35 to add, 0 to change, 0 to destroy.[0m

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.
